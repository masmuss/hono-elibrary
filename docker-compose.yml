services:
  db:
    image: postgres:16.9-alpine3.22
    restart: always
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U elibrary_user -d elibrary_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - default_network

  redis:
    image: redis:8-alpine
    restart: always
    ports:
      - "6379:6379"
    networks:
      - default_network

  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: always
    env_file:
      - .env
    ports:
      - "3000:3000"
    develop:
      watch:
        - action: sync
          path: .
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - default_network

volumes:
  db_data: 
    driver: local

networks:
  default_network:
    driver: bridge